##! マウス操作を有効にする
set-option -g mouse on

##! デフォルトのシェル
set-option -g default-shell "/bin/zsh"

##! 256色表示可能に変更
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# -----------------------
# ステータスラインの設定
# -------- --------------
##! 更新する間隔を1秒にする
set-option -g status-interval 1

##! window-status を中央揃えで配置
set-option -g status-justify "centre"

##! ステータスラインの背景色
set-option -g status-bg "colour238"

##! ステータスラインの文字色
set-option -g status-fg "colour255"

##! ステータスの左側の設定
set -g status-left-length 25

##! ステータスのさいだいの長さを指定
set-option -g status-left-length 20
set-option -g status-right-length 60
##! Mac/Linuxのアイコンを表示
if-shell '[ `uname` = "Darwin" ]' {
  set -g status-left '#[fg=white,bold,bg=#6D6D6B]  #[default]#[fg=#000000,bold]#S#[default]|'
}
if-shell '[ `uname` = "Linux" ]' {
  set -g status-left '#[fg=white,bold,bg=#6D6D6B]  #[default]#[fg=#000000,bold]#S#[default]|'
}

##! ステータス右側の情報
# set -g status-right '#{host} #(tmux run-shell "tmux_hook --default true --git-path #{pane_current_path}")'
# get-tmux-mouse-status.shはマウスの状態を色付きで返すスクリプト
# get-osx-battery.shはバッテリーの状態を取得するスクリプト
if-shell '[ `uname` = "Darwin" ]' {
  set -g status-right '#[fg=white,bold,bg=#6D6D6B]#(date "+%F %H:%M")#[default] #(sh ~/.var/dots/bin/get-tmux-mouse-status.sh) #{host} #(sh ~/.var/dots/bin/get-osx-battery.sh) ' 
}
if-shell '[ `uname` = "Linux" ]' {
  set -g status-right '#(sh ~/.var/dots/bin/get-tmux-mouse-status.sh) #{host} #[fg=white,bold,bg=#6D6D6B]#(date "+%F %H:%M:%S")#[default]'
}

##! 二番目のステータスの表示
TMUX_MY_VAR="a"
set -g status-format[1] '#[fg=white,bold,bg=#6D6D6B]#(arch)#[default]|#[fg=white,bg=#6D6D6B] #{version} #[default]|#[fg=white,bg=#6D6D6B] #{pane_tty} #[default]| #[fg=black,bold]#{s|#(echo $HOME)|~|:pane_current_path}#[default] | #(python3 -S ~/.var/dots/bin/get-date-remained.py) | #(sh ~/.var/dots/bin/get-tmux-window-data.sh)'

# ---------
# スタイル
# ---------
##! ウィンドウのスタイル
set -g window-style 'fg=colour249,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
set -g window-status-format '#I:#W#F'
# 今、選択されているwindowのフォーマット
set -g window-status-current-style 'fg=#000000,bold,italics,underscore'
# windowのリナンバリングをon
set -g renumber-windows on
# 自動リネームを有効化
set -g automatic-rename on
# TODO
set -g automatic-rename-format '#{pane_current_command}'

##! paneのスタイル
setw -g pane-base-index 1
set -g pane-active-border-style bg=black,fg=cyan
set -g pane-border-style bg=black,fg=grey
# setw -g pane-border-status bottom
setw -g pane-border-status off
setw -g pane-border-format '#{pane_current_command} | #{pane_tty} | #{pane_current_path}'
set -g history-limit 10000

# ---------------
# キーマッピング
# ---------------
##! vimのキーバインドでペインを移動
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

##! vimのキーバインドでペインをリサイズ
bind -r resize-pane -L 5
bind -r resize-pane -D 5
bind -r resize-pane -U 5
bind -r resize-pane -R 5

# -------------
# コピーモード
# -------------
##! vi モード
setw -g mode-keys vi

##! 'v'で選択開始
bind -T copy-mode-vi v send -X begin-selection

##! 'V'で行選択
bind -T copy-mode-vi V send -X select-line

##! 'C-v'で矩形選択
bind -T copy-mode-vi C-v send -X rectangle-toggle

##! 'y'でヤンク
bind -T copy-mode-vi y send -X copy-selection

##! 'Y'で行ヤンク
bind -T copy-mode-vi Y send -X copy-line

##! 'C-p'でペースト
bind-key C-p paste-buffer
